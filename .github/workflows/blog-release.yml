name: GitHub Pages and Infra Deployment

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: write

jobs:
  deploy-infra:
    name: Deploy Infrastructure to AWS
    runs-on: ubuntu-22.04
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::851725404156:role/Terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

  deploy-site:
    name: Deploy Hugo Site
    needs: deploy-infra
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.119.0'
          extended: true

      - name: Build
        run: hugo --minify

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::851725404156:role/Terraform

      - name: Sync public/ folder to S3
        run: aws s3 sync public/ s3://my-tech-blog-jb123/ --delete

      - name: Invalidate CloudFront Cache
        if: github.ref == 'refs/heads/main'
        run: aws cloudfront create-invalidation \
            --distribution-id E1F0G6RQ22PJE0 \
            --paths "/*"
